1 SSH
ssh-keygen -t rsa -b 4096 -C "MOJ EMAIL@tak.com"
Tworzenie nowego klucza SSH

Nastepnie należy podać plik, do którego chcemy zapisać klucz, domyślnie jest to /c/Users/you/.ssh/id_algorithm
później podawany jest passphrase (klucz) używany jako dodatkowe zabezpieczenie

eval "$(ssh-agent -s)"
uruchomnie ssh-agent'a 

ssh-add ~/.ssh/id_rsa
dodanie pliku z kluczem ssh do ssh-agent'a, dzięki temu nie musimy cały czas podawać naszego  klucza


clip < ~/.ssh/id_rsa.pub
skopiowanie klucza do schowka i dodanie go w ustawieniach githube'a

poinformowanie o zmianie sposobu logowania
git remote set-url origin git@github.com:InzynieriaOprogramowaniaAGH/MDO2022_S.git

sprawdzenie połączeń
git remote -v

2 Utworzenie tag'a na ostatnim commicie
git tag -a ŁD400222_Lab02_zad2.1 -m "Łukasz Dyrlaga, Lab 02 chyba działa" 

wypchnięcie tej zmiany na serwer
git push --follow-tags


3 Utworzenie nowego brancha krótko-żyjącego
git checkout -b Grupa02-ŁD400222_Lab02

4 Hook

commit-msg.
#!/bin/sh

COMMIT=`cat $1`
REGEX="^ŁD400222"
echo $COMMIT
if ! [[ $COMMIT =~ $REGEX ]]; then
    echo '# Commit message should start with ŁD400222'
    exit 1;
fi


5 git checkout -b Grupa2
przełączenie na nowy branch Grupa2

git pull origin Grupa2 
zaciągnięcie zmian z remote repository z brancha Grupa2

git merge Grupa02-ŁD400222_Lab02
przyłączenie do brancha, na którym obecnie jesteśmy zmian wprowadzonych na branchu Grupa02-ŁD400222_Lab02

git push origin Grupa2
wypchnięcie zmian na remote repository na branch Grupa2

git branch -d Grupa02-ŁD400222_Lab02 zamknięcie brancha
